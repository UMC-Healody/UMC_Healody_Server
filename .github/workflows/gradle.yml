name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set resources directory
    - uses: actions/checkout@v3
    - run: touch ./src/main/resources/application.yml
    - run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
    - run: touch ./src/main/resources/email.properties
    - run: echo "${{ secrets.EMAIL }}" > ./src/main/resources/email.properties
    - run: touch ./src/main/resources/data.sql
    - run: echo "${{ secrets.DATA }}" > ./src/main/resources/data.sql
      
    - name: Spring Boot Build
      run: ./gradlew clean build -x test

    - name: Docker Image Build
      run: docker build -t limjyjustin/spring-docker .

    - name: Docker Hub Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker Hub Push
      run: docker push limjyjustin/spring-docker

    - name: Get Github IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2 

    - name: Add GitHub IP to AWS
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

    - name: AWS EC2 Connection
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        password: ${{ secrets.EC2_PASSWORD }} 
        port: ${{ secrets.EC2_SSH_PORT }}
        timeout: 60s
        script: | 
          sudo docker stop spring-docker
          sudo docker rm spring-docker
          sudo docker run -it -d -p 8080:8080 --name spring-docker limjyjustin/spring-docker
    
    - name: Remove IP FROM security group
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
